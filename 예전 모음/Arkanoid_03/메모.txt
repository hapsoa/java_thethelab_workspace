key 값들 1, 2, 3, 4 에 있는 것 모두 체크해 줘야 해.
(1,2)	(2,3)	(3,4)
(1,3)	(2,4)
(1,4)

모두 체크할수 있도록 해야해.

(1,2)	(2,1)	(3,1)
(1,3)	(2,3)	(3,2)
(1,4)	(2,4)	(3,4)



(1,1)	(2,1)	(3,1)	(4,1)
(1,2)	(2,2)	(3,2)	(4,2)
(1,3)	(2,3)	(3,3)	(4,3)
(1,4)	(2,4)	(3,4)	(4,4)



-------문제점-------
키 값마다 ArrayList가 있는데,
src ArrayList 의 모든 내용을
dst ArrayList 의 모든 내용에 충돌되는지 검사해야 하면,

4중 루프가 이루어 지지 않을까?



--
View.onCollision 이 아니라
Block.nocollision 해야 하지 않을까? 아니 해도 된다. 오버라이딩 되기 때문



onCollision 을 구현해야 하는데,,

공에는 아이템 말고 충돌하면, 

공에 맵의 블록들을 옮겨 가야 하는데








-------
CollisionManager 다루기.


동시에 충돌을 해줘야 하는데, 
루프를 돌면서, (공과 벽돌) 공이 부딪히는 연산을 하면, 벽돌이 작용하는 연산에서는 충돌체크가 true가 풀려있다.
동시에 충돌 체크가 되어야해.


Concurrent Exception 을 풀기 위한 작업






CollisionManager의 enum으로 View(각 도형)의 변수로 있으면, Circle Rect로,










collisionRectRectOutside 메소드가 계속 true로 작동해.

이유는 뭘까 - 































